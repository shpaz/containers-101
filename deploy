function init {
  docker network create demo 

  docker run -d --net demo --name mongodb -v data:/data/db docker.io/library/mongo:latest
  sleep 3
  docker exec mongodb mongo "movies" --eval "db.createCollection('fiction')" 
  docker exec mongodb mongo "movies" --eval "printjson(db.getCollectionNames())"
  docker exec mongodb mongo "movies" --eval "db.fiction.insertOne({'name':'shon'})"
  docker exec mongodb mongo "movies" --eval "db.fiction.insertOne({'name':'batel'})"
  docker exec mongodb mongo "movies" --eval "db.fiction.insertOne({'name':'isracard'})"
  docker exec mongodb mongo "movies" --eval "db.getCollection('fiction').find().pretty()"
  
  docker build -t app .  
  docker run -d --net demo --name app -p 5000:5000 localhost/app:latest
}

function moredata {
  docker exec mongodb mongo "movies" --eval "db.fiction.insertOne({'name':'shlomi'})"
  docker exec mongodb mongo "movies" --eval "db.fiction.insertOne({'name':'haim'})"
  docker exec mongodb mongo "movies" --eval "db.fiction.insertOne({'name':'tzur'})"
}

function delete {
docker rm -f app mongodb
docker volume rm data
docker network rm demo
}

function push {
  docker login registry-1.docker.io
 
  docker tag docker.io/library/mongo:latest shonpaz123/basics-demo:mongo 
  docker tag localhost/app:latest shonpaz123/basics-demo:app 

  docker push shonpaz123/basics-demo:mongo 
  docker push shonpaz123/basics-demo:app 
}
case $1 in
    init) "$@"; exit;;
    moredata) "$@"; exit;;
    push) "$@"; exit;;
    delete) "$@"; exit;;
esac
